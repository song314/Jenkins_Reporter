/*
 * Copyright (C) 2010 The Android Open Source Project Licensed under the Apache
 * License, Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
 * or agreed to in writing, software distributed under the License is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

package com.pinguo.edit.sdk.gallery;

import android.content.Context;
import android.content.res.Resources;
import com.pinguo.edit.sdk.gallery.ui.AlbumSetSlotRenderer;
import com.pinguo.edit.sdk.gallery.ui.AlbumSlotRenderer;
import com.pinguo.edit.sdk.gallery.ui.SlotView;
import com.pinguo.edit.sdk.utils.ResourceHelper;

public final class UIConfig {

    public static class AlbumSetPage {
        private static AlbumSetPage sInstance;
        public SlotView.Spec slotViewSpec; // 每个相册显示位置的配置信息
        public AlbumSetSlotRenderer.LabelSpec labelSpec; // 每个相册标签的显示位置配置信息

        public static synchronized AlbumSetPage get(Context context) {
            if (sInstance == null) {
                sInstance = new AlbumSetPage(context);
            }
            return sInstance;
        }

        private AlbumSetPage(Context context) {
            Resources r = context.getResources();
            slotViewSpec = new SlotView.Spec();
            slotViewSpec.columsLand =  r.getInteger(ResourceHelper.getInteger(context, "composite_sdk_albumset_rows_land")); // 水平方向的列数
            slotViewSpec.columsPort = r.getInteger(ResourceHelper.getInteger(context, "composite_sdk_albumset_rows_port")); // 垂直方向的列数
            slotViewSpec.slotGap = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_slot_gap")); // 单元格间距
            slotViewSpec.tagHeight = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_albumset_label_height")); // 标签高度
            slotViewSpec.paddingLeft = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_padding_left"));
            slotViewSpec.paddingTop = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_padding_top"));
            slotViewSpec.paddingRight = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_padding_right"));
            slotViewSpec.paddingBottom = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_padding_bottom"));
            slotViewSpec.header_bar_height = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_album_header_bar_height"));
            // 列表显示时使用宽，高
            slotViewSpec.slotWidth = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_slot_width"));
            slotViewSpec.slotHeight = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_albumset_slot_height"));

            labelSpec = new AlbumSetSlotRenderer.LabelSpec();
            labelSpec.labelHeight = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_label_height"));
            labelSpec.titleOffset = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_title_offset"));
            labelSpec.countOffset = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_count_offset"));
            labelSpec.titleFontSize = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_title_font_size"));
            labelSpec.countFontSize = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_albumset_count_font_size"));
            labelSpec.iconSize = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_albumset_icon_size"));
        }
    }

    public static class AlbumPage {
        private static AlbumPage sInstance;
        public SlotView.Spec slotViewSpec;
        public AlbumSlotRenderer.SortTagSpec sortTagSpec;

        public static synchronized AlbumPage get(Context context) {
            if (sInstance == null) {
                sInstance = new AlbumPage(context);
            }
            return sInstance;
        }

        private AlbumPage(Context context) {
            Resources r = context.getResources();
            slotViewSpec = new SlotView.Spec();
            slotViewSpec.columsLand = r.getInteger(ResourceHelper.getInteger(context, "composite_sdk_album_rows_land"));
            slotViewSpec.columsPort = r.getInteger(ResourceHelper.getInteger(context, "composite_sdk_album_rows_port"));
            slotViewSpec.slotGap = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_album_slot_gap"));
            slotViewSpec.tagWidth = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_album_label_width"));
            // 标签高度设空
            slotViewSpec.tagHeight = 0;
            //slotViewSpec.tagHeight = r.getDimensionPixelSize(R.dimen.album_label_height); // 标签高度
            slotViewSpec.paddingLeft = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_album_padding_left"));
            slotViewSpec.paddingTop = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_album_padding_top"));
            slotViewSpec.paddingRight = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_album_padding_right"));
            slotViewSpec.paddingBottom = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_album_padding_bottom"));
            slotViewSpec.header_bar_height = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_album_header_bar_height"));

            sortTagSpec = new AlbumSlotRenderer.SortTagSpec(); //分类标签布局定义
            sortTagSpec.titleFontSize = r.getDimensionPixelSize(ResourceHelper.getDimen(context, "composite_sdk_album_tag_font_size"));
            sortTagSpec.countFontSize = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_album_count_font_size"));
            sortTagSpec.iconSize = r.getDimensionPixelSize(ResourceHelper.getDimen(context,"composite_sdk_album_icon_size"));
        }
    }
}
