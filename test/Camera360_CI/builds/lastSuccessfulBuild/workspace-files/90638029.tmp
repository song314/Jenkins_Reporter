package com.pinguo.edit.sdk.login.user;

import android.content.Context;

import com.android.volley.AuthFailureError;
import com.android.volley.Request;
import com.pinguo.Camera360Lib.network.HttpStringRequest;
import com.pinguo.edit.sdk.login.lib.network.ApiAsyncTaskBase;
import com.pinguo.edit.sdk.login.lib.os.AsyncResult;
import com.pinguo.edit.sdk.login.lib.util.MD5;
import com.pinguo.edit.sdk.login.model.LoginConfig;

import org.json.JSONException;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by crab on 14-10-24.
 */
public class ApiPhoneLogin extends ApiAsyncTaskBase<UserInfoResponse> {
    private String mPhoneNumber;
    private String mPassword;

    public ApiPhoneLogin(String phoneNumber, String password, Context context) {
        super(context);
        mPhoneNumber = phoneNumber;
        mPassword = password;
    }

    @Override
    public void get(final AsyncResult<UserInfoResponse> result) {
        //两次md5加密
        final String md5_password = MD5.password_md5(mPassword);
        final String url = LoginConfig.HOST + LoginConfig.PHONE_LOGIN_ADDR;
        execute(new HttpStringRequest(Request.Method.POST, url) {
            @Override
            protected Map<String, String> getParams() throws AuthFailureError {
                Map<String, String> params = new HashMap<String, String>();
                LoginConfig.prepareCommonParams(mContext, params);
                //邮箱跟密码参数
                params.put("mobile", mPhoneNumber);
                params.put("password", md5_password);
                //获取签名
                String sig = com.pinguo.Camera360Lib.utils.NetworkUtils.getSigByParamMap(params);
                params.put("sig", sig);
                return params;
            }

            @Override
            protected void onResponse(String s) {
                try {
                    postResponse(result, new UserInfoResponse(s, "mobile"));
                } catch (JSONException e) {
                    postError(result, e);
                }
            }

            @Override
            protected void onErrorResponse(Exception e) {
                postError(result, e);
            }
        });
    }
}
