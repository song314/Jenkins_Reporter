package com.pinguo.edit.sdk.filter.square.fragment;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.pinguo.edit.sdk.R;
import com.pinguo.edit.sdk.filter.square.model.CompositeModel;
import com.pinguo.edit.sdk.filter.square.model.OnLineCompositeResourceManager;
import com.pinguo.edit.sdk.filter.square.model.entity.OnLineCompositeBean;
import com.pinguo.edit.sdk.filter.square.view.SquareListView;

import java.util.List;

/**
 * Created by hlf on 14-11-28.
 * 滤镜广场的fragment
 */
public class SquareFragment extends Fragment {

    private SquareListView mSquareListView;
    private View mBackView;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

        View rootView = inflater.inflate(R.layout.composite_sdk_square, container, false);

        mSquareListView = (SquareListView) rootView.findViewById(R.id.square_listview);
        mSquareListView.setNewestOnClick(mNewestClickListener);
        mSquareListView.setHottestOnClick(mHottestClickListener);

        mBackView = rootView.findViewById(R.id.back);
        mBackView.setOnClickListener(mOnClickListener);

        return rootView;
    }

    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);

        mSquareListView.getOnClickListener().onClick(mSquareListView.getHottestView());
    }


    private View.OnClickListener mHottestClickListener = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            CompositeModel compositeModel = CompositeModel.getInstance();
            boolean hasLocationModel = compositeModel.hasLocationModel(OnLineCompositeResourceManager.Type.Hottest.name());
            if (hasLocationModel) {

                List<OnLineCompositeBean> viewData = mSquareListView.getHottestList();
                if (viewData != null && viewData.size() != 0) {
                    mSquareListView.setCurrentHottest();

                } else {
                    List<OnLineCompositeBean> data = compositeModel.getModels(OnLineCompositeResourceManager.Type.Hottest.name());
                    mSquareListView.initHottestViewModel(data);

                }
            } else {
                compositeModel.loadModel(new CompositeModel.OnModelLoadActionListener() {
                    @Override
                    public void onError(String error) {

                    }

                    @Override
                    public void onResponse(final List<OnLineCompositeBean> list) {
                        if (!getActivity().isFinishing()) {
                            getActivity().runOnUiThread(new Runnable() {
                                @Override
                                public void run() {
                                    mSquareListView.initHottestViewModel(list);
                                }
                            });
                        }

                    }
                }, OnLineCompositeResourceManager.Type.Hottest.name());

            }
        }
    };

    private View.OnClickListener mNewestClickListener = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            CompositeModel compositeModel = CompositeModel.getInstance();
            boolean hasLocationModel = compositeModel.hasLocationModel(OnLineCompositeResourceManager.Type.Newest.name());
            if (hasLocationModel) {

                List<OnLineCompositeBean> viewData = mSquareListView.getNewestList();
                if (viewData != null && viewData.size() != 0) {
                    mSquareListView.setCurrentNewest();

                } else {
                    List<OnLineCompositeBean> data = compositeModel.getModels(OnLineCompositeResourceManager.Type.Newest.name());
                    mSquareListView.initNewestViewModel(data);

                }
            } else {
                compositeModel.loadModel(new CompositeModel.OnModelLoadActionListener() {
                    @Override
                    public void onError(String error) {

                    }

                    @Override
                    public void onResponse(final List<OnLineCompositeBean> list) {
                        if (!getActivity().isFinishing()) {
                            getActivity().runOnUiThread(new Runnable() {
                                @Override
                                public void run() {
                                    mSquareListView.initNewestViewModel(list);
                                }
                            });
                        }

                    }
                }, OnLineCompositeResourceManager.Type.Newest.name());

            }
        }
    };

    private View.OnClickListener mOnClickListener = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            if (v == mBackView) {
//                mSquareListView.moveHead();
            }
        }
    };
}
