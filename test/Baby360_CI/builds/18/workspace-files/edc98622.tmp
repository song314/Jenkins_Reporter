package com.pinguo.edit.sdk.option.push.utils;

import android.annotation.TargetApi;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Build;
import android.os.Environment;
import android.telephony.TelephonyManager;

import com.pinguo.edit.sdk.lib.DeviceInfo;
import com.pinguo.edit.sdk.option.feedback.Constant;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Map;


/**
 * Created by zengchumeng on 13-11-4.
 */
public class PushUtils {
    /**
     * 取得Push连接地址
     *
     * @return Push连接地址
     * @author liubo
     */
    public static final String getPushUrl(String pushUrl, Map<String, String> param) {
        if (param == null || param.size() == 0) {
            return pushUrl;
        }
        StringBuilder sb = new StringBuilder(pushUrl);
        sb.append('?');
        for (Map.Entry<String, String> entry : param.entrySet()) {
            sb.append(entry.getKey());
            sb.append('=');
            sb.append(entry.getValue());
            sb.append('&');
        }
        sb.deleteCharAt(sb.length() - 1);
        return sb.toString();
    }

    /**
     * 取得push临时存放目录
     *
     * @param context Context
     * @param name    子目录名
     * @return 取得push临时存放目录
     * @author liubo
     */
    public static String getPushCachePath(Context context, String name) {
        File cacheFile = getExternalCacheDir(context);
        if (cacheFile == null) {
            return null;
        }

        String tempPath = cacheFile.getAbsolutePath() + File.separator + "push" + File.separator
                + name;
        if (FileUtils.folderCheck(tempPath)) {
            return tempPath;
        }

        return null;
    }

    /**
     * Get the external app cache directory.
     *
     * @param context The context to use
     * @return The external cache dir
     */
    @TargetApi(8)
    public static File getExternalCacheDir(Context context) {
        if (DeviceInfo.hasSDCard(context)) {
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.FROYO) {
                return context.getExternalCacheDir();
            }

            // Before Froyo we need to construct the external cache dir
            // ourselves
            final String cacheDir = "/Android/data/" + context.getPackageName() + "/cache/";

            File sdcard = Environment.getExternalStorageDirectory();
            if (sdcard == null) {
                return null;
            }

            return new File(sdcard.getAbsolutePath() + cacheDir);
        }
        return null;

    }

    /**
     * 取得IMEI，唯一标识，如果不能生成，将随机
     * import com.pinguo.lib.util.DeviceInfo;
     * import com.pinguo.lib.util.Util;长度15的字符串
     *
     * @param context Context
     * @param pref    PushPreference
     * @return 取得IMEI
     * @author liubo
     */
    public static String getIMEI(Context context, PushPreference pref) {
        TelephonyManager tm = (TelephonyManager) context
                .getSystemService(Context.TELEPHONY_SERVICE);
        String imei = tm.getDeviceId();
        if (imei != null && imei.length() > 5) {
            return imei;
        }

        imei = pref.getString(PushPreference.IMEI, "");
        if (!PushUtils.isNull(imei) && imei.length() > 5) {
            return imei;
        }

        imei = "UNKNOWN" + Constant.getRandomString();
        pref.putString(PushPreference.IMEI, imei);
        pref.commit();
        return imei;
    }

    /**
     * 取得时间的字符串格式
     *
     * @param time   时间的long型表示
     * @param format 格式表达式
     * @return 时间的字符串格式
     * @author liubo
     */
    public static String getDate(long time, String format) {
        SimpleDateFormat sdf = new SimpleDateFormat(format, Locale.ENGLISH);
        return sdf.format(new Date(time));
    }

    /**
     * 空字符串判断
     *
     * @param str String
     * @return true：空字符串，false非空
     * @author liubo
     */
    public static boolean isNull(String str) {
        return str == null || "".equals(str.trim());
    }

    /**
     * 取得SDCard的下载路径
     *
     * @param context Context
     * @return Sdcard的公共下载路径
     * @author liubo
     */
    public static String getDownLoadPath(Context context) {
        if (DeviceInfo.hasSDCard(context) && DeviceInfo.isMemoryEnough(context)) {
            File download = Environment
                    .getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
            if (download == null) {
                return null;
            }

            if (!download.exists()) {
                if (!download.mkdirs()) {
                    return null;
                }
            }
            return download.getAbsolutePath();
        }

        return null;
    }

    /**
     * 取得安装APK的Intent
     *
     * @param fileName 文件存储名
     * @return 安装APK的Intent
     * @author liubo
     */
    public static Intent getInstallIntent(String fileName) {
        File file = new File(fileName);
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        String type = "application/vnd.android.package-archive";
        intent.setDataAndType(Uri.fromFile(file), type);
        return intent;
    }

}
